// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  email       String       @unique
  name        String
  password    String
  hostProfile HostProfile?
  bids        Bid[]
  createdAt   DateTime     @default(now())
}

model HostProfile {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  user     User     @relation(fields: [userId], references: [id])
  userId   String   @unique @db.ObjectId
  listings Listing[]
}

model Listing {
  id          String   @id @default (auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Int
  currency    String
  link        String   @unique
  checkInDate DateTime?
  checkOutDate DateTime?
  host        HostProfile @relation(fields: [hostId], references: [id])
  hostId      String   @db.ObjectId
  image       Image?   @relation("ListingImage")
  bids        Bid[]
  reviewStat  ReviewStat?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  listing   Listing  @relation("ListingImage", fields: [listingId], references: [id])
  listingId String   @unique @db.ObjectId
}

model ReviewStat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Float
  count     Int
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId String   @unique @db.ObjectId
}

model Bid {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  amount     Int
  listing    Listing  @relation(fields: [listingId], references: [id])
  listingId  String   @db.ObjectId
  bidder     User     @relation(fields: [bidderId], references: [id])
  bidderId   String   @db.ObjectId
  createdAt  DateTime @default(now())
}